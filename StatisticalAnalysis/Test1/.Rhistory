shapiro.test(NSGAII$NSGAII)
shapiro.test(SPEA2$SPEA2)
library("car")
qqPlot(MOGA$MOGA, ylab="RPD",xlab="MOGA")
qqPlot(NSGAI$NSGAI, ylab="RPD",xlab="NSGAI")
qqPlot(NSGAII$NSGAII, ylab="RPD",xlab="NSGAII")
qqPlot(SPEA2$SPEA2, ylab="RPD",xlab="SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
kruskal.test(RPD ~ Algoritmo)
pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
#Error in library("PMCMRplus") : there is no package called ‘PMCMRplus’
#sudo apt-get install libgmp-dev
#sudo apt-get install libmpfr-dev
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(car, quietly = TRUE)){
install.packages("car")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
# we recommend installing the entire tidyverse modeling set, which includes broom:
install.packages("tidymodels")
# alternatively, to install just broom:
install.packages("broom")
# to get the development version from GitHub:
# install.packages("devtools")
devtools::install_github("tidymodels/broom")
}
if (!require(GGally, quietly = TRUE)){
install.packages("GGally")
}
#kruskalmc
#if (!require(pgirmess, quietly = TRUE)){
#      install.packages("pgirmess")
#}
#posthoc.kruskal.nemenyi.test
if (!require(PMCMR, quietly = TRUE)){
install.packages("PMCMRplus")
}
if (!require(ggpubr, quietly = TRUE)){
iinstall.packages("ggpubr")
}
MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158_AVG.csv", header=TRUE, sep=";")
#MyData2 <- data.frame(MyData2)
#Retira as linhas em que o LA-ALNS não tem resultado
#MyData2 <- MyData2[-c(16:18),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(25:27),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(28:30),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(43:45),] #deletes columns 5 and 7
MOGA <- data.frame(MyData2[, 1])
colnames(MOGA) <- c("MOGA")
NSGAI <- data.frame(MyData2[, 2])
colnames(NSGAI) <- c("NSGAI")
NSGAII <- data.frame(MyData2[, 3])
colnames(NSGAII) <- c("NSGAII")
SPEA2 <- data.frame(MyData2[, 4])
colnames(SPEA2) <- c("SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
t1 <- length(MOGA$MOGA)
t2 <- length(NSGAI$NSGAI)
t3 <- length(NSGAII$NSGAII)
t4 <- length(SPEA2$SPEA2)
Algoritmo <- factor(rep(1:4, c(t1, t2, t3, t4)),
labels = c("MOGA",
"NSGAI",
"NSGAII",
"SPEA2"))
cat("MOGA", "\n")
summary(MOGA)
cat("\n\n")
cat("NSGAI", "\n")
summary(NSGAI)
cat("\n\n")
cat("NSGAII", "\n")
summary(NSGAII)
cat("\n\n")
cat("SPEA2", "\n")
summary(SPEA2)
cat("\n\n")
MediaMOGA <- mean(MOGA$MOGA)
MediaNSGAI <- mean(NSGAI$NSGAI)
MediaNSGAII <- mean(NSGAII$NSGAII)
MediaSPEA2 <- mean(SPEA2$SPEA2)
DPMOGA <- sd(MOGA$MOGA)
DPNSGAI <- sd(as.numeric(NSGAI$NSGAI))
DPNSGAII <- sd(as.numeric(NSGAII$NSGAII))
DPSPEA2 <- sd(as.numeric(SPEA2$SPEA2))
cat("MediaMOGA: ", MediaMOGA)
cat("\n")
cat("MediaNSGAI: ", MediaNSGAI)
cat("\n")
cat("MediaNSGAII: ", MediaNSGAII)
cat("\n")
cat("MediaSPEA2: ", MediaSPEA2)
cat("\n")
cat("DPMOGA: ", DPMOGA)
cat("\n")
cat("DPNSGAI: ", DPNSGAI)
cat("\n")
cat("DPNSGAII: ", DPNSGAII)
cat("\n")
cat("DPSPEA2: ", DPSPEA2)
cat("\n")
cat("Tamanho MOGA: ", length(MOGA$MOGA))
cat("\n")
cat("Tamanho NSGAI: ", length(NSGAI$NSGAI))
cat("\n")
cat("Tamanho NSGAII: ", length(NSGAII$NSGAII))
cat("\n")
cat("Tamanho SPEA2: ", length(SPEA2$SPEA2))
cat("\n")
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
shapiro.test(MOGA$MOGA)
shapiro.test(NSGAI$NSGAI)
shapiro.test(NSGAII$NSGAII)
shapiro.test(SPEA2$SPEA2)
library("car")
qqPlot(MOGA$MOGA, ylab="RPD",xlab="MOGA")
qqPlot(NSGAI$NSGAI, ylab="RPD",xlab="NSGAI")
qqPlot(NSGAII$NSGAII, ylab="RPD",xlab="NSGAII")
qqPlot(SPEA2$SPEA2, ylab="RPD",xlab="SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
kruskal.test(RPD ~ Algoritmo)
pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
gc()
gc()
gc()
#MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158_AVG.csv", header=TRUE, sep=";")
MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158.csv", header=TRUE, sep=";")
#MyData2 <- data.frame(MyData2)
#Retira as linhas em que o LA-ALNS não tem resultado
#MyData2 <- MyData2[-c(16:18),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(25:27),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(28:30),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(43:45),] #deletes columns 5 and 7
MOGA <- data.frame(MyData2[, 1])
colnames(MOGA) <- c("MOGA")
NSGAI <- data.frame(MyData2[, 2])
colnames(NSGAI) <- c("NSGAI")
NSGAII <- data.frame(MyData2[, 3])
colnames(NSGAII) <- c("NSGAII")
SPEA2 <- data.frame(MyData2[, 4])
colnames(SPEA2) <- c("SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
t1 <- length(MOGA$MOGA)
t2 <- length(NSGAI$NSGAI)
t3 <- length(NSGAII$NSGAII)
t4 <- length(SPEA2$SPEA2)
Algoritmo <- factor(rep(1:4, c(t1, t2, t3, t4)),
labels = c("MOGA",
"NSGAI",
"NSGAII",
"SPEA2"))
#MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158_AVG.csv", header=TRUE, sep=";")
MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158.csv", header=TRUE, sep=";")
#MyData2 <- data.frame(MyData2)
#Retira as linhas em que o LA-ALNS não tem resultado
#MyData2 <- MyData2[-c(16:18),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(25:27),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(28:30),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(43:45),] #deletes columns 5 and 7
MOGA <- data.frame(MyData2[, 1])
colnames(MOGA) <- c("MOGA")
NSGAI <- data.frame(MyData2[, 2])
colnames(NSGAI) <- c("NSGAI")
NSGAII <- data.frame(MyData2[, 3])
colnames(NSGAII) <- c("NSGAII")
SPEA2 <- data.frame(MyData2[, 4])
colnames(SPEA2) <- c("SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
t1 <- length(MOGA$MOGA)
t2 <- length(NSGAI$NSGAI)
t3 <- length(NSGAII$NSGAII)
t4 <- length(SPEA2$SPEA2)
Algoritmo <- factor(rep(1:4, c(t1, t2, t3, t4)),
labels = c("MOGA",
"NSGAI",
"NSGAII",
"SPEA2"))
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
#dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
#dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
#dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
#dev.off()
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
#dev.off()
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
#Error in library("PMCMRplus") : there is no package called ‘PMCMRplus’
#sudo apt-get install libgmp-dev
#sudo apt-get install libmpfr-dev
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(car, quietly = TRUE)){
install.packages("car")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
# we recommend installing the entire tidyverse modeling set, which includes broom:
install.packages("tidymodels")
# alternatively, to install just broom:
install.packages("broom")
# to get the development version from GitHub:
# install.packages("devtools")
devtools::install_github("tidymodels/broom")
}
if (!require(GGally, quietly = TRUE)){
install.packages("GGally")
}
#kruskalmc
#if (!require(pgirmess, quietly = TRUE)){
#      install.packages("pgirmess")
#}
#posthoc.kruskal.nemenyi.test
if (!require(PMCMR, quietly = TRUE)){
install.packages("PMCMRplus")
}
if (!require(ggpubr, quietly = TRUE)){
iinstall.packages("ggpubr")
}
#MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158_AVG.csv", header=TRUE, sep=";")
MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158.csv", header=TRUE, sep=";")
#MyData2 <- data.frame(MyData2)
#Retira as linhas em que o LA-ALNS não tem resultado
#MyData2 <- MyData2[-c(16:18),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(25:27),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(28:30),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(43:45),] #deletes columns 5 and 7
MOGA <- data.frame(MyData2[, 1])
colnames(MOGA) <- c("MOGA")
NSGAI <- data.frame(MyData2[, 2])
colnames(NSGAI) <- c("NSGAI")
NSGAII <- data.frame(MyData2[, 3])
colnames(NSGAII) <- c("NSGAII")
SPEA2 <- data.frame(MyData2[, 4])
colnames(SPEA2) <- c("SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
t1 <- length(MOGA$MOGA)
t2 <- length(NSGAI$NSGAI)
t3 <- length(NSGAII$NSGAII)
t4 <- length(SPEA2$SPEA2)
Algoritmo <- factor(rep(1:4, c(t1, t2, t3, t4)),
labels = c("MOGA",
"NSGAI",
"NSGAII",
"SPEA2"))
cat("MOGA", "\n")
summary(MOGA)
cat("\n\n")
cat("NSGAI", "\n")
summary(NSGAI)
cat("\n\n")
cat("NSGAII", "\n")
summary(NSGAII)
cat("\n\n")
cat("SPEA2", "\n")
summary(SPEA2)
cat("\n\n")
MediaMOGA <- mean(MOGA$MOGA)
MediaNSGAI <- mean(NSGAI$NSGAI)
MediaNSGAII <- mean(NSGAII$NSGAII)
MediaSPEA2 <- mean(SPEA2$SPEA2)
DPMOGA <- sd(MOGA$MOGA)
DPNSGAI <- sd(as.numeric(NSGAI$NSGAI))
DPNSGAII <- sd(as.numeric(NSGAII$NSGAII))
DPSPEA2 <- sd(as.numeric(SPEA2$SPEA2))
cat("MediaMOGA: ", MediaMOGA)
cat("\n")
cat("MediaNSGAI: ", MediaNSGAI)
cat("\n")
cat("MediaNSGAII: ", MediaNSGAII)
cat("\n")
cat("MediaSPEA2: ", MediaSPEA2)
cat("\n")
cat("DPMOGA: ", DPMOGA)
cat("\n")
cat("DPNSGAI: ", DPNSGAI)
cat("\n")
cat("DPNSGAII: ", DPNSGAII)
cat("\n")
cat("DPSPEA2: ", DPSPEA2)
cat("\n")
cat("Tamanho MOGA: ", length(MOGA$MOGA))
cat("\n")
cat("Tamanho NSGAI: ", length(NSGAI$NSGAI))
cat("\n")
cat("Tamanho NSGAII: ", length(NSGAII$NSGAII))
cat("\n")
cat("Tamanho SPEA2: ", length(SPEA2$SPEA2))
cat("\n")
pdf(file="boxplot.pdf")
boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
#savePlot("test.png")
#dev.off()
shapiro.test(MOGA$MOGA)
shapiro.test(NSGAI$NSGAI)
shapiro.test(NSGAII$NSGAII)
shapiro.test(SPEA2$SPEA2)
library("car")
qqPlot(MOGA$MOGA, ylab="RPD",xlab="MOGA")
qqPlot(NSGAI$NSGAI, ylab="RPD",xlab="NSGAI")
qqPlot(NSGAII$NSGAII, ylab="RPD",xlab="NSGAII")
qqPlot(SPEA2$SPEA2, ylab="RPD",xlab="SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
kruskal.test(RPD ~ Algoritmo)
pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
#pdf(file="boxplot.pdf")
#boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
boxplot(RPD ~ Algoritmo, xlab="Algoritmos",ylab="RPD")
#savePlot("test.png")
#dev.off()
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
#Error in library("PMCMRplus") : there is no package called ‘PMCMRplus’
#sudo apt-get install libgmp-dev
#sudo apt-get install libmpfr-dev
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(car, quietly = TRUE)){
install.packages("car")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
# we recommend installing the entire tidyverse modeling set, which includes broom:
install.packages("tidymodels")
# alternatively, to install just broom:
install.packages("broom")
# to get the development version from GitHub:
# install.packages("devtools")
devtools::install_github("tidymodels/broom")
}
if (!require(GGally, quietly = TRUE)){
install.packages("GGally")
}
#kruskalmc
#if (!require(pgirmess, quietly = TRUE)){
#      install.packages("pgirmess")
#}
#posthoc.kruskal.nemenyi.test
if (!require(PMCMR, quietly = TRUE)){
install.packages("PMCMRplus")
}
if (!require(ggpubr, quietly = TRUE)){
iinstall.packages("ggpubr")
}
#MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158_AVG.csv", header=TRUE, sep=";")
MyData2<-read.csv(file="LARGE_FULL_2021_11_01_2158.csv", header=TRUE, sep=";")
#MyData2 <- data.frame(MyData2)
#Retira as linhas em que o LA-ALNS não tem resultado
#MyData2 <- MyData2[-c(16:18),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(25:27),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(28:30),] #deletes columns 5 and 7
#MyData2 <- MyData2[-c(43:45),] #deletes columns 5 and 7
MOGA <- data.frame(MyData2[, 1])
colnames(MOGA) <- c("MOGA")
NSGAI <- data.frame(MyData2[, 2])
colnames(NSGAI) <- c("NSGAI")
NSGAII <- data.frame(MyData2[, 3])
colnames(NSGAII) <- c("NSGAII")
SPEA2 <- data.frame(MyData2[, 4])
colnames(SPEA2) <- c("SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
t1 <- length(MOGA$MOGA)
t2 <- length(NSGAI$NSGAI)
t3 <- length(NSGAII$NSGAII)
t4 <- length(SPEA2$SPEA2)
Algoritmo <- factor(rep(1:4, c(t1, t2, t3, t4)),
labels = c("MOGA",
"NSGAI",
"NSGAII",
"SPEA2"))
cat("MOGA", "\n")
summary(MOGA)
cat("\n\n")
cat("NSGAI", "\n")
summary(NSGAI)
cat("\n\n")
cat("NSGAII", "\n")
summary(NSGAII)
cat("\n\n")
cat("SPEA2", "\n")
summary(SPEA2)
cat("\n\n")
MediaMOGA <- mean(MOGA$MOGA)
MediaNSGAI <- mean(NSGAI$NSGAI)
MediaNSGAII <- mean(NSGAII$NSGAII)
MediaSPEA2 <- mean(SPEA2$SPEA2)
DPMOGA <- sd(MOGA$MOGA)
DPNSGAI <- sd(as.numeric(NSGAI$NSGAI))
DPNSGAII <- sd(as.numeric(NSGAII$NSGAII))
DPSPEA2 <- sd(as.numeric(SPEA2$SPEA2))
cat("MediaMOGA: ", MediaMOGA)
cat("\n")
cat("MediaNSGAI: ", MediaNSGAI)
cat("\n")
cat("MediaNSGAII: ", MediaNSGAII)
cat("\n")
cat("MediaSPEA2: ", MediaSPEA2)
cat("\n")
cat("DPMOGA: ", DPMOGA)
cat("\n")
cat("DPNSGAI: ", DPNSGAI)
cat("\n")
cat("DPNSGAII: ", DPNSGAII)
cat("\n")
cat("DPSPEA2: ", DPSPEA2)
cat("\n")
cat("Tamanho MOGA: ", length(MOGA$MOGA))
cat("\n")
cat("Tamanho NSGAI: ", length(NSGAI$NSGAI))
cat("\n")
cat("Tamanho NSGAII: ", length(NSGAII$NSGAII))
cat("\n")
cat("Tamanho SPEA2: ", length(SPEA2$SPEA2))
cat("\n")
#pdf(file="boxplot.pdf")
#boxplot(RPD ~ Algoritmo, data = MyData2, xlab="Algorithms",ylab="RPD")
boxplot(RPD ~ Algoritmo, xlab="Algoritmos",ylab="RPD")
#savePlot("test.png")
#dev.off()
shapiro.test(MOGA$MOGA)
shapiro.test(NSGAI$NSGAI)
shapiro.test(NSGAII$NSGAII)
shapiro.test(SPEA2$SPEA2)
library("car")
qqPlot(MOGA$MOGA, ylab="RPD",xlab="MOGA")
qqPlot(NSGAI$NSGAI, ylab="RPD",xlab="NSGAI")
qqPlot(NSGAII$NSGAII, ylab="RPD",xlab="NSGAII")
qqPlot(SPEA2$SPEA2, ylab="RPD",xlab="SPEA2")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
kruskal.test(RPD ~ Algoritmo)
pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
#kruskal.test(RPD ~ Algoritmo)
pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
kruskal.test(RPD ~ Algoritmo)
#pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
#kruskal.test(RPD ~ Algoritmo)
#pairwise.wilcox.test(RPD, Algoritmo, p.adj = "bonferroni")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
#kruskal.test(RPD ~ Algoritmo)
pairwise.wilcox.test(RPD, Algoritmo, p.adj = "bonferroni")
RPD <- c(MOGA$MOGA, NSGAI$NSGAI, NSGAII$NSGAII, SPEA2$SPEA2)
Algoritmo <- factor(c(rep("MOGA",t1),rep("NSGAI",t2),rep("NSGAII",t3),rep("SPEA2",t4)))
#kruskal.test(RPD ~ Algoritmo)
#pairwise.wilcox.test(RPD, Algoritmo, paired = TRUE, p.adj = "bonferroni")
pairwise.wilcox.test(RPD, Algoritmo, p.adj = "bonferroni")
